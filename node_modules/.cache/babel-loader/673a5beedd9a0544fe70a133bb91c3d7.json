{"ast":null,"code":"var _jsxFileName = \"/Users/tusharanand/Desktop/keep/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n\n  function addNote(notes) {\n    console.log(notes);\n    fetch('localhost:3000/articles', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        title: notes.title,\n        content: notes.content\n      })\n    });\n  }\n\n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/articles`).then(response => response.json()).then(data => {\n      setNotes(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateArea, {\n      onAdd: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), notes.map((noteItem, index) => {\n      return /*#__PURE__*/_jsxDEV(Note, {\n        id: index,\n        title: noteItem.title,\n        content: noteItem.content,\n        onDelete: deleteNote\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","Footer","Note","CreateArea","axios","useEffect","App","notes","setNotes","addNote","console","log","fetch","method","headers","body","JSON","stringify","title","content","deleteNote","id","prevNotes","filter","noteItem","index","then","response","json","data","map"],"sources":["/Users/tusharanand/Desktop/keep/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\n\n\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n \n  function addNote(notes) {\n    console.log(notes);\n    fetch('localhost:3000/articles', {\n      method: 'POST',\n      headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: notes.title,\n      content: notes.content\n    })\n  });\n  }\n \n  function deleteNote(id) {\n    setNotes(prevNotes => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/articles`)\n     .then((response) => response.json()).then(data => {\n      setNotes(data);\n     });\n   }, []);\n\n  \n \n   \n  return (\n    <div >\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAIA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;;EAEA,SAASU,OAAT,CAAiBF,KAAjB,EAAwB;IACtBG,OAAO,CAACC,GAAR,CAAYJ,KAAZ;IACAK,KAAK,CAAC,yBAAD,EAA4B;MAC/BC,MAAM,EAAE,MADuB;MAE/BC,OAAO,EAAE;QACT,UAAU,kBADD;QAET,gBAAgB;MAFP,CAFsB;MAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,KAAK,EAAEX,KAAK,CAACW,KADM;QAEnBC,OAAO,EAAEZ,KAAK,CAACY;MAFI,CAAf;IAN2B,CAA5B,CAAL;EAWD;;EAED,SAASC,UAAT,CAAoBC,EAApB,EAAwB;IACtBb,QAAQ,CAACc,SAAS,IAAI;MACpB,OAAOA,SAAS,CAACC,MAAV,CAAiB,CAACC,QAAD,EAAWC,KAAX,KAAqB;QAC3C,OAAOA,KAAK,KAAKJ,EAAjB;MACD,CAFM,CAAP;IAGD,CAJO,CAAR;EAKD;;EAEDhB,SAAS,CAAC,MAAM;IACdO,KAAK,CAAE,gCAAF,CAAL,CACEc,IADF,CACQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADrB,EACsCF,IADtC,CAC2CG,IAAI,IAAI;MACjDrB,QAAQ,CAACqB,IAAD,CAAR;IACA,CAHF;EAIA,CALO,EAKL,EALK,CAAT;EAUA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,UAAD;MAAY,KAAK,EAAEpB;IAAnB;MAAA;MAAA;MAAA;IAAA,QAFF,EAGGF,KAAK,CAACuB,GAAN,CAAU,CAACN,QAAD,EAAWC,KAAX,KAAqB;MAC9B,oBACE,QAAC,IAAD;QAEE,EAAE,EAAEA,KAFN;QAGE,KAAK,EAAED,QAAQ,CAACN,KAHlB;QAIE,OAAO,EAAEM,QAAQ,CAACL,OAJpB;QAKE,QAAQ,EAAEC;MALZ,GACOK,KADP;QAAA;QAAA;QAAA;MAAA,QADF;IASD,CAVA,CAHH,eAcE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GAtDQnB,G;;KAAAA,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}